// =======================================
// Transition animation mixin
// =======================================
@mixin transition($val...) {
   -webkit-transition: $val;
      -moz-transition: $val;
        -o-transition: $val;
           transition: $val;
}

// =============================================
// Mixin to easily use font awesome icons
// with css :before and :after
// i.e. @include fa-icon('\f028');
// =============================================
@mixin fa-icon($icon, $placement: false) {
  content: $icon;
  font-family: $font-fontAwesome;
  @if $placement == before {
    padding-right: $base-unit-half;
  }
  @if $placement == after {
    padding-left: $base-unit-half;
  }
}

// =============================================
// Mixin to style a buttons size, background
// color, and text color.
// =============================================
@mixin btn-style($btn-size, $btn-background, $btn-color, $btn-width, $btn-radius) {
  background: $btn-background;
  color: $btn-color;
  padding: $btn-size;
  width: $btn-width;
  @include border-radius($btn-radius);
  &:hover {
    background: lighten($btn-background, 10%);
  }
}

// =======================================
// Mixin to use RGBa with IE8 support
// =======================================

@mixin transparent($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;
}


// =============================================
// use to style placeholder text
// across browsers
// =============================================
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin list($type) {
  // If you want a list with icons
  @if $type == 'icon' {
    li {
      display: block;
      font-size: $h6-font-size;
      position: relative;
      padding: $base-unit-quarter $base-unit * 1.5;
    }
    li:before {
      padding-right: $base-unit-half;
      position: absolute;
      top: $base-unit-quarter;
      left: 0;
      @include fa-icon('\f00c', before);
    }
  }
  // If you want an inline list
  @if $type == 'inline' {
    li {
      display: inline-block;
      float: left;
      padding-right: $base-unit;
    }
  }
  // If you want an inline list with vertical dividers
  @if $type == 'inline-divider' {
    li {
      display: inline-block;
      float: left;
    }
    li:after {
      content: ' | ';
      padding: 0 $base-unit-half;
    }
    li:last-child:after {
      content: ' ';
    }
  }
  // If you want a vertical, unstyled list
  @if $type == 'unstyled' {
    li {
      position: relative;
      display: block;
      padding: $base-unit-quarter 0;
    }
  }
  @if $type == 'nav' {
    li {
      list-style-type: none;
      display: inline-block;
      padding: $base-unit-half;
    }
  }
}

// =============================================
// For making circles
// =============================================
@mixin circle($width, $color) {
  width: $width;
  height: $width;
  background: $color;
  -webkit-border-radius: $width/2;
     -moz-border-radius: $width/2;
          border-radius: $width/2;
}